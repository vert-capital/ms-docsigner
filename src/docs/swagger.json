{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                }
            }
        },
        "/api/user/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "entity.EntityUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                }
            }
        },
        "/api/user/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Active",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                }
            }
        },
        "/api/user/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get me",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get me",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                }
            }
        },
        "/api/user/password/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "entity.EntityUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "entity.EntityUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.EntityUser"
                        }
                    }
                }
            }
        },
        "/api/v1/documents": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna uma lista de documentos com filtros opcionais",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Listar documentos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Buscar por nome",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por chave Clicksign",
                        "name": "clicksign_key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de documentos",
                        "schema": {
                            "$ref": "#/definitions/dtos.DocumentListResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cria um novo documento usando file_path ou conteúdo base64\nAceita documentos através de file_path (caminho absoluto) ou file_content_base64 (conteúdo em base64)\nPara file_path: file_size e mime_type são obrigatórios\nPara file_content_base64: file_size e mime_type são opcionais (detectados automaticamente)\nTipos suportados: PDF, JPEG, PNG, GIF\nTamanho máximo: 7.5MB após decodificação",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Criar documento",
                "parameters": [
                    {
                        "description": "Dados do documento",
                        "name": "document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.DocumentCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Documento criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/dtos.DocumentResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/documents/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna um documento específico pelo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Buscar documento por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do documento",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Documento encontrado",
                        "schema": {
                            "$ref": "#/definitions/dtos.DocumentResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Documento não encontrado",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza um documento existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Atualizar documento",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do documento",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados para atualização",
                        "name": "document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.DocumentUpdateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Documento atualizado",
                        "schema": {
                            "$ref": "#/definitions/dtos.DocumentResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Documento não encontrado",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove um documento do sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Deletar documento",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do documento",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Documento deletado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Documento não encontrado",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/envelopes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of envelopes with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "envelopes"
                ],
                "summary": "List envelopes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status filter",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Clicksign key filter",
                        "name": "clicksign_key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.EnvelopeListResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new envelope in Clicksign with optional signatories. When signatories are provided in the request, they will be created along with the envelope in a single atomic transaction. The process maintains backward compatibility - envelopes can still be created without signatories.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "envelopes"
                ],
                "summary": "Create envelope",
                "parameters": [
                    {
                        "description": "Envelope data with optional signatories array. When signatories are provided, the response will include the created signatories with their IDs.",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.EnvelopeCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Envelope created successfully. If signatories were provided in the request, the response includes the created signatories with their assigned IDs.",
                        "schema": {
                            "$ref": "#/definitions/dtos.EnvelopeResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid request data, duplicate signatory emails, or unsupported document format",
                        "schema": {
                            "$ref": "#/definitions/dtos.ValidationErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal server error - envelope creation failed or signatory creation failed during transaction",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/envelopes/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get envelope by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "envelopes"
                ],
                "summary": "Get envelope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Envelope ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.EnvelopeResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/envelopes/{id}/activate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Activate envelope to start signing process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "envelopes"
                ],
                "summary": "Activate envelope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Envelope ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.EnvelopeResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/envelopes/{id}/send": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Send envelope signatories to Clicksign for processing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signatories"
                ],
                "summary": "Send signatories to Clicksign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Envelope ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.SignatoryListResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/envelopes/{id}/signatories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of signatories for a specific envelope",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signatories"
                ],
                "summary": "Get signatories by envelope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Envelope ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.SignatoryListResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new signatory for an envelope",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signatories"
                ],
                "summary": "Create signatory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Envelope ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Signatory data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SignatoryCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.SignatoryResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ValidationErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/signatories/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get signatory by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signatories"
                ],
                "summary": "Get signatory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Signatory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.SignatoryResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update signatory information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signatories"
                ],
                "summary": "Update signatory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Signatory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Signatory update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SignatoryUpdateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.SignatoryResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ValidationErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete signatory by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signatories"
                ],
                "summary": "Delete signatory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Signatory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.DocumentCreateRequestDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "example": "Documento para assinatura digital"
                },
                "file_content_base64": {
                    "type": "string",
                    "example": "JVBERi0xLjQKM..."
                },
                "file_path": {
                    "type": "string",
                    "example": "/path/to/document.pdf"
                },
                "file_size": {
                    "type": "integer",
                    "example": 2048576
                },
                "mime_type": {
                    "type": "string",
                    "example": "application/pdf"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3,
                    "example": "Contrato de Prestação de Serviços"
                }
            }
        },
        "dtos.DocumentListResponseDTO": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.DocumentResponseDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dtos.DocumentResponseDTO": {
            "type": "object",
            "properties": {
                "clicksign_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mime_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dtos.DocumentUpdateRequestDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "draft",
                        "ready",
                        "processing",
                        "sent"
                    ]
                }
            }
        },
        "dtos.EnvelopeCreateRequestDTO": {
            "type": "object",
            "required": [
                "name",
                "signatory_emails"
            ],
            "properties": {
                "auto_close": {
                    "type": "boolean"
                },
                "deadline_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.EnvelopeDocumentRequest"
                    }
                },
                "documents_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "message": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "remind_interval": {
                    "type": "integer",
                    "maximum": 30,
                    "minimum": 1
                },
                "signatories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.EnvelopeSignatoryRequest"
                    }
                },
                "signatory_emails": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dtos.EnvelopeDocumentRequest": {
            "type": "object",
            "required": [
                "file_content_base64",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "file_content_base64": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "dtos.EnvelopeListResponseDTO": {
            "type": "object",
            "properties": {
                "envelopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.EnvelopeResponseDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dtos.EnvelopeResponseDTO": {
            "type": "object",
            "properties": {
                "auto_close": {
                    "type": "boolean"
                },
                "clicksign_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "documents_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "remind_interval": {
                    "type": "integer"
                },
                "signatories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.SignatoryResponseDTO"
                    }
                },
                "signatory_emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dtos.EnvelopeSignatoryRequest": {
            "type": "object",
            "required": [
                "email",
                "name"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "communicate_events": {
                    "$ref": "#/definitions/dtos.SignatoryCommunicateEventsDTO"
                },
                "email": {
                    "type": "string"
                },
                "group": {
                    "type": "integer"
                },
                "has_documentation": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "phone_number": {
                    "type": "string"
                },
                "refusable": {
                    "type": "boolean"
                }
            }
        },
        "dtos.ErrorResponseDTO": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.SignatoryCommunicateEventsDTO": {
            "type": "object",
            "properties": {
                "document_signed": {
                    "type": "string"
                },
                "signature_reminder": {
                    "type": "string"
                },
                "signature_request": {
                    "type": "string"
                }
            }
        },
        "dtos.SignatoryCreateRequestDTO": {
            "type": "object",
            "required": [
                "email",
                "envelope_id",
                "name"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "communicate_events": {
                    "$ref": "#/definitions/dtos.SignatoryCommunicateEventsDTO"
                },
                "email": {
                    "type": "string"
                },
                "envelope_id": {
                    "type": "integer"
                },
                "group": {
                    "type": "integer"
                },
                "has_documentation": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "phone_number": {
                    "type": "string"
                },
                "refusable": {
                    "type": "boolean"
                }
            }
        },
        "dtos.SignatoryListResponseDTO": {
            "type": "object",
            "properties": {
                "signatories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.SignatoryResponseDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dtos.SignatoryResponseDTO": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "communicate_events": {
                    "$ref": "#/definitions/dtos.SignatoryCommunicateEventsDTO"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "envelope_id": {
                    "type": "integer"
                },
                "group": {
                    "type": "integer"
                },
                "has_documentation": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "refusable": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dtos.SignatoryUpdateRequestDTO": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "communicate_events": {
                    "$ref": "#/definitions/dtos.SignatoryCommunicateEventsDTO"
                },
                "email": {
                    "type": "string"
                },
                "envelope_id": {
                    "type": "integer"
                },
                "group": {
                    "type": "integer"
                },
                "has_documentation": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "phone_number": {
                    "type": "string"
                },
                "refusable": {
                    "type": "boolean"
                }
            }
        },
        "dtos.ValidationErrorDetail": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dtos.ValidationErrorResponseDTO": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ValidationErrorDetail"
                    }
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "entity.EntityUser": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 120,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 120,
                    "minLength": 4
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}