version: "3.7"

volumes:
  data:
  go-cache:

services:
  app:
    build:
      context: ./src
      dockerfile: ./Dockerfile-dev
    env_file: ./src/.env
    ports:
      - 8080:8080
      - 2345:2345
    volumes:
      - ./src:/app
      - go-cache:/go/pkg/mod
    environment:
      - ENV=dev
    depends_on:
      kafka:
        condition: service_healthy
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
  kafka:
    image: confluentinc/cp-kafka:7.9.1
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "kafka-broker-api-versions --bootstrap-server localhost:9092",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
  webkafka:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9030:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM=PLAIN
    depends_on:
      kafka:
        condition: service_healthy
  db:
    image: postgres:12.4-alpine
    env_file: ./src/.env
    ports:
      - 5432:5432
    volumes:
      - ./src:/app
      - ./database:/db
      - ./.docker/postgres:/docker-entrypoint-initdb.d
  mail:
    image: mailhog/mailhog:v1.0.1
    ports:
      - 8025:8025
